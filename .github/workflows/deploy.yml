# This is a basic workflow to help you get started with Actions

name: Flutter Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          
      - name: Setup flutter
        uses: subosito/flutter-action@vmaster
        
      - name: Enable desktop support	
        run: flutter config --enable-windows-desktop
        
      - name: Doctor
        run: flutter doctor -v
        
      - name: Get dependencies
        run: flutter pub get
      
      - name: Build windows
        run: flutter build windows

      - name: Build apk
        run: flutter build apk

      - name: Upload apk artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Youtube Downloader.apk
          path: ./build/app/outputs/flutter-apk/app-release.apk

      - name: Compress Windows App
        run: .\tool\compress.ps1
        shell: powershell


      - name: Upload windows zip artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Youtube Downloader - Windows.zip
          path: Youtube Downloader.zip

  build-appimage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup flutter
        uses: subosito/flutter-action@master

      - name: Install dependencies
        run: sudo apt-get update -y && sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Enable desktop support	
        run: flutter config --enable-linux-desktop

      - name: Build Flutter app
        run: flutter build linux

      - name: Build AppImage
        run: ./create_appimage.sh

      - name: Upload linux appimage to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Youtube Downloader - Linux.AppImage
          path: youtube_downloader_flutter-x86_64.AppImage
    
    
